# Generated by Django 2.2.1 on 2019-05-28 23:34

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import shared_foundation.models.shared_user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='SharedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, help_text='Email address.', max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, db_index=True, help_text='The users given name.', max_length=63, null=True, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, db_index=True, help_text='The users middle name.', max_length=63, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, db_index=True, help_text='The users last name.', max_length=63, null=True, verbose_name='Last Name')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('birthdate', models.DateField(blank=True, help_text='The users birthdate.', null=True, verbose_name='Birthdate')),
                ('nationality', models.CharField(blank=True, help_text='Nationality of the person.', max_length=63, null=True, verbose_name='Nationality')),
                ('gender', models.CharField(blank=True, help_text='Gender of the person. While Male and Female may be used, text strings are also acceptable for people who do not identify as a binary gender.', max_length=63, null=True, verbose_name='Gender')),
                ('billing_given_name', models.CharField(blank=True, help_text='The given name used for billing.', max_length=127, null=True, verbose_name='Billing Given Name')),
                ('billing_last_name', models.CharField(blank=True, help_text='The last name used for billing.', max_length=127, null=True, verbose_name='Billing Last Name')),
                ('billing_email', models.EmailField(blank=True, help_text='The email used for billing', max_length=255, null=True, verbose_name='Billing Email')),
                ('billing_telephone', models.CharField(blank=True, help_text='The telephone number used for billing.', max_length=31, null=True, verbose_name='Billing Telephone')),
                ('billing_country', models.CharField(blank=True, help_text='The country. For example, USA. You can also provide the two-letter <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">ISO 3166-1 alpha-2</a> country code.', max_length=127, null=True, verbose_name='Billing Country')),
                ('billing_locality', models.CharField(blank=True, help_text='The locality. For example, Mountain View.', max_length=127, null=True, verbose_name='Billing Locality')),
                ('billing_region', models.CharField(blank=True, help_text='The region. For example, CA.', max_length=127, null=True, verbose_name='Billing Region')),
                ('billing_post_office_box_number', models.CharField(blank=True, help_text='Apartment, suite, unit, building, floor, etc.', max_length=255, null=True, verbose_name='Billing Post Office Box Number')),
                ('billing_postal_code', models.CharField(blank=True, db_index=True, help_text='The postal code. For example, 94043.', max_length=127, null=True, verbose_name='Billing Postal Code')),
                ('billing_street_address', models.CharField(blank=True, help_text='The street address. For example, 1600 Amphitheatre Pkwy.', max_length=255, null=True, verbose_name='Billing Street Address')),
                ('billing_street_address_extra', models.CharField(blank=True, help_text='Apartment, suite, unit, building, floor, etc.', max_length=255, null=True, verbose_name='Billing Street Address (Extra Line)')),
                ('is_shipping_different_then_billing', models.BooleanField(blank=True, default=False, help_text='Boolean indicates whether the shipping information is the same as the billing information.', verbose_name='Is shipping information same as billing information')),
                ('shipping_given_name', models.CharField(blank=True, help_text='The given name used for shipping.', max_length=127, null=True, verbose_name='Shipping Given Name')),
                ('shipping_last_name', models.CharField(blank=True, help_text='The last name used for shipping.', max_length=127, null=True, verbose_name='Shipping Last Name')),
                ('shipping_email', models.EmailField(blank=True, help_text='The email used for shipping.', max_length=127, null=True, verbose_name='Shipping Email')),
                ('shipping_telephone', models.CharField(blank=True, help_text='The number used for shipper.', max_length=31, null=True, verbose_name='Shipping Telephone')),
                ('shipping_country', models.CharField(blank=True, help_text='The country. For example, USA. You can also provide the two-letter <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">ISO 3166-1 alpha-2</a> country code.', max_length=127, null=True, verbose_name='Shipping Country')),
                ('shipping_locality', models.CharField(blank=True, help_text='The locality. For example, Mountain View.', max_length=127, null=True, verbose_name='Shipping Locaility')),
                ('shipping_region', models.CharField(blank=True, help_text='The region. For example, CA.', max_length=127, null=True, verbose_name='Shipping Region')),
                ('shipping_post_office_box_number', models.CharField(blank=True, help_text='Apartment, suite, unit, building, floor, etc.', max_length=127, null=True, verbose_name='Shipping Post Office Box Number')),
                ('shipping_postal_code', models.CharField(blank=True, db_index=True, help_text='The postal code. For example, 94043.', max_length=127, null=True, verbose_name='Shipping Postal Code')),
                ('shipping_street_address', models.CharField(blank=True, help_text='The street address. For example, 1600 Amphitheatre Pkwy.', max_length=255, null=True, verbose_name='Shipping Street Address')),
                ('shipping_street_address_extra', models.CharField(blank=True, help_text='Apartment, suite, unit, building, floor, etc.', max_length=255, null=True, verbose_name='Shipping Street Address (Extra Line)')),
                ('report_email_frequency', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Never'), (2, 'Weekly'), (3, 'Monthly')], default=2, help_text='The frequency to email the report by.', verbose_name='Report email frequency')),
                ('last_report_email_created_at', models.DateTimeField(blank=True, help_text='The date and time of the last report email was created.', null=True, verbose_name='Last report email created at')),
                ('timezone', models.CharField(blank=True, default='UTC', help_text='The timezone the user belongs to.', max_length=63, verbose_name='Timezone')),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(blank=True, default=False, verbose_name='Is Staff')),
                ('is_superuser', models.BooleanField(blank=True, default=False, verbose_name='Is Superuser')),
                ('salt', models.CharField(blank=True, default=shared_foundation.models.shared_user._createHash, help_text='The unique salt value me with this object.', max_length=127, null=True, unique=True, verbose_name='Salt')),
                ('type_of', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, help_text='The type of user this is. Value represents ID of user type.', verbose_name='Type of')),
                ('is_ok_to_email', models.BooleanField(blank=True, default=True, help_text='Indicates whether customer allows being reached by email', verbose_name='Is OK to email')),
                ('is_ok_to_text', models.BooleanField(blank=True, default=True, help_text='Indicates whether customer allows being reached by text.', verbose_name='Is OK to text')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, db_index=True, help_text='A longitude and latitude coordinates of this user.', null=True, srid=4326, verbose_name='Location')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('referral_code', models.CharField(blank=True, db_index=True, default=shared_foundation.models.shared_user.get_referral_code, help_text='The referral code which can be given out to other users.', max_length=31, null=True, unique=True, verbose_name='Referral Code')),
                ('was_email_activated', models.BooleanField(blank=True, default=False, help_text='Was the email address verified?', verbose_name='Was Email Activated')),
                ('was_onboarded', models.BooleanField(blank=True, default=False, help_text='Was the user onboarded in our system? If yes then allow user access to their dashboard and the remaining features of the site.', verbose_name='Was Onboarded')),
                ('onboarding_survey_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='The onboarding submitted survey data.', null=True, verbose_name='Survey data')),
                ('pr_access_code', models.CharField(blank=True, default=shared_foundation.models.shared_user._createHash, help_text='The access code to enter the password reset page to be granted access to restart your password.', max_length=127, verbose_name='Password Reset Access Code')),
                ('pr_expiry_date', models.DateTimeField(blank=True, default=shared_foundation.models.shared_user.get_expiry_date, help_text='The date where the access code expires and no longer works.', verbose_name='Password Reset Access Code Expiry Date')),
                ('has_signed_tos', models.BooleanField(blank=True, default=False, help_text='Boolean indicates whether has agreed to the terms of service.', verbose_name='Has signed terms of service')),
                ('tos_agreement', models.TextField(blank=True, help_text='The actual terms of service agreement the user agreed to when they signed.', null=True, verbose_name='Terms of service agreement')),
                ('tos_signed_on', models.DateTimeField(blank=True, help_text='The date where the access code expires and no longer works.', null=True, verbose_name='Terms of service signed on')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('referred_by', models.ForeignKey(blank=True, help_text='The user whom referred this user into our system.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Shared User',
                'verbose_name_plural': 'Shared Users',
                'db_table': 'nwapp_shared_users',
                'permissions': (),
                'default_permissions': (),
            },
            managers=[
                ('objects', shared_foundation.models.shared_user.SharedUserManager()),
            ],
        ),
    ]
